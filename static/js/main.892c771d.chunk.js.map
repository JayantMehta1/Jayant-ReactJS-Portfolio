{"version":3,"sources":["components/Media/MediaContent.js","components/Media/MediaBlock.js","components/Intro.js","components/About.js","components/Experience/Experience.js","components/Experience/ExperienceContent.js","components/Projects/Projects.js","components/Projects/ProjectsContent.js","components/Contact.js","components/HomePage.js","components/Nav/RightNav.jsx","components/Nav/Burger.jsx","components/Nav/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["mediaProfiles","name","brand","myURL","iconClass","MediaBlock","brandProfiles","filter","otherProfiles","map","profile","key","href","target","class","id","icon","size","color","Intro","src","process","alt","MediaContent","About","Experience","experienceProfiles","imageName","company","title","timeline","ExperienceContent","Projects","projectProfiles","description","skills","ProjectsContent","Contact","HomePage","Ul","styled","ul","open","RightNav","activeClass","to","spy","smooth","offset","duration","StyledBurger","div","Burger","useState","setOpen","onClick","Nav","nav","Navbar","className","library","add","fab","faCoffee","faEnvelope","App","path","component","exact","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.892c771d.chunk.js","sourcesContent":["const mediaProfiles = [\r\n    {\r\n        name: 'Email',\r\n        brand: false,\r\n        myURL: 'mailto: jayant.mehta@uwaterloo.ca',\r\n        iconClass: \"envelope\"\r\n    },\r\n    {\r\n        name: 'GitHub',\r\n        brand: true,\r\n        myURL: 'https://github.com/JayantMehta1',\r\n        iconClass: ['fab', 'github']\r\n    },\r\n    {\r\n        name: 'LinkedIn',\r\n        brand: true,\r\n        myURL: 'https://www.linkedin.com/in/jayant-mehta',\r\n        iconClass: ['fab', 'linkedin']\r\n    },\r\n];\r\n\r\nexport default mediaProfiles;","import React from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n// import { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst MediaBlock = ({ mediaProfiles }) => {\r\n    const brandProfiles = mediaProfiles.filter(brandProfiles => brandProfiles.brand === true);\r\n    const otherProfiles = mediaProfiles.filter(otherProfiles => otherProfiles.brand === false)\r\n\r\n    return (\r\n        <>\r\n        {otherProfiles.map((profile, key) => (\r\n            <a href={profile.myURL} target=\"_blank\">\r\n                <span class=\"iconCSS\" >\r\n                    <FontAwesomeIcon id=\"iconLink\" icon={profile.iconClass} size=\"3x\" color=\"black\" />\r\n                </span>\r\n            </a>\r\n        ))}\r\n        {brandProfiles.map((profile, key) => (\r\n            <a href={profile.myURL} target=\"_blank\">\r\n                <span class=\"iconCSS\" >\r\n                    <FontAwesomeIcon id=\"iconLink\" icon={profile.iconClass} size=\"3x\" color=\"black\" />\r\n                </span>\r\n            </a>\r\n        ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MediaBlock;","import React from 'react';\r\nimport MediaContent from './Media/MediaContent';\r\nimport MediaBlock from './Media/MediaBlock';\r\n\r\nconst Intro = () => (\r\n    <>\r\n      <div id=\"intro\">\r\n        <h1 id=\"name\">Jayant Mehta</h1>\r\n        <h3 id=\"bio\">University of Waterloo</h3>\r\n        <h3 id=\"bio\">Systems Design Engineering</h3>\r\n        <img id='profileIMG' src={process.env.PUBLIC_URL + '/profile.jpg'} alt=\"ProfilePic\"></img>\r\n        <div class=\"mediaSpacingIntro\">\r\n          <MediaBlock mediaProfiles={MediaContent} />\r\n        </div>\r\n      </div>\r\n    </>\r\n);\r\n\r\nexport default Intro;","import React from 'react';\r\n\r\nconst About = () => (\r\n    <>\r\n    <div id=\"about\">\r\n    <h1>About</h1>\r\n        <p>\r\n                Hi, my name is Jayant!\r\n                I am a second year student studying Systems Design Engineering \r\n                at the University of Waterloo. I am currently seeking Summer 2021 internships\r\n                in software development and program management roles.  \r\n        </p>\r\n        <p>\r\n                With a passion for software development, I am motivated to \r\n                ship code that directly impacts users in production. I follow my passion\r\n                through internships, hackathons, and projects. If you want to grab coffee (virtually) or connect for a chat,\r\n                I'd love to meet you.\r\n        </p>\r\n        <p>\r\n                Outside of my development projects and work, I enjoy coaching swimming as a swim instructor, playing basketball, and table tennis.\r\n                You can also find me hiking in the trails with my dog Oscar, especially during the summer months :).\r\n        </p>\r\n    </div>\r\n   \r\n\r\n    </>\r\n);\r\n\r\nexport default About;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Experience = ({ experienceProfiles }) => (\r\n    <>\r\n    <div id=\"experience\">\r\n      <h1>Experience</h1>\r\n\r\n      <div class=\"row\">\r\n\r\n      {experienceProfiles.map((profile, key) => (\r\n        <div class=\"card\">\r\n          <img class = \"cardIMG\" src={process.env.PUBLIC_URL + '/companyImages/' + profile.imageName} alt=\"Avatar\"></img>\r\n          <div class=\"card-body\">\r\n            <h4>{profile.company}</h4>\r\n            <h5>{profile.title}</h5>\r\n            <p>\r\n              {profile.timeline}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </>\r\n);\r\n\r\nexport default Experience;","const ExperienceContent = [\r\n    {\r\n        company: 'Oracle',\r\n        title: 'Software Developer and SDET Intern',\r\n        timeline: 'Sep 2020 - Present',\r\n        imageName: 'oracle.png'\r\n    },\r\n    {\r\n        company: 'Government of Canada',\r\n        title: 'IT Full Stack Developer',\r\n        timeline: 'Jan - Apr 2020',\r\n        imageName: 'gov_canada.png'\r\n    },\r\n    {\r\n        company: 'Design Net Specific',\r\n        title: 'Web Developer',\r\n        timeline: 'Jul - Aug 2019',\r\n        imageName: 'design.jpg'\r\n    },\r\n    {\r\n        company: 'Microsoft',\r\n        title: 'Student Learn Ambassador Program',\r\n        timeline: 'Apr 2020 - Present',\r\n        imageName: 'microsoft.jpeg'\r\n    },\r\n];\r\n\r\nexport default ExperienceContent;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Projects = ({ projectProfiles }) => (\r\n    <>\r\n    <div id=\"projects\">\r\n      <h1>Projects</h1>\r\n\r\n      <div class=\"row\">\r\n\r\n      {projectProfiles.map((profile, key) => (\r\n        <div class=\"card\">\r\n          <img class = \"cardIMG\" src={process.env.PUBLIC_URL + '/projectImages/' + profile.imageName} alt=\"Avatar\"></img>\r\n          <div class=\"card-body\">\r\n            <h4>{profile.name}</h4>\r\n            <h5>{profile.description}</h5>\r\n            <p>\r\n              {profile.skills}\r\n            </p>\r\n            {/* <a href={profile.URL} class=\"btn\">Read more</a> */}\r\n          </div>\r\n        </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </>\r\n);\r\n\r\nexport default Projects;","const ProjectsContent = [\r\n    {\r\n        name: 'Facebook AI Hackathon',\r\n        description: 'Google Cloud Vision image recognition to post ads to matching Facebook groups',\r\n        skills: 'Python, PyTorch, Google Vision, React.js, Flask, JSON, AJAX',\r\n        imageName: 'hackathonFacebook.png'\r\n    },\r\n    {\r\n        name: 'Air Quality Analyzer',\r\n        description: 'Compare and compute air qualities for thousands of cities around the world.',\r\n        skills: 'JavaScript, Vue.js, HTML, CSS, APIs',\r\n        imageName: 'air.jpg'\r\n    },\r\n    {\r\n        name: 'Angular Motion Game',\r\n        description: 'GUI multi-level game with basic AI for security drones pointing lasers at the player',\r\n        skills: 'Java, Object Oriented Programming',\r\n        imageName: 'angular.png'\r\n    },\r\n    {\r\n        name: 'Biometrics Bicycle Lock',\r\n        description: 'Embedded secuirty system to win  as a Provincial Finalist in Innovation by DECA Ontario',\r\n        skills: 'C++, Arduino, Fingerprint Sensor',\r\n        imageName: 'deca.png'\r\n    },\r\n];\r\n\r\nexport default ProjectsContent;","import React from 'react';\r\nimport MediaContent from './Media/MediaContent';\r\nimport MediaBlock from './Media/MediaBlock';\r\n\r\nconst Contact = () => (\r\n    <>\r\n      <div id=\"contact\">\r\n        <h1>Contact</h1>\r\n        <p>Thanks for visiting! You can email me at jayant.mehta@uwaterloo.ca or connect with me below.</p>\r\n\r\n        <div>\r\n          <MediaBlock mediaProfiles={MediaContent} />\r\n        </div>\r\n        <p>Developed and Designed by Jayant Mehta</p>\r\n        <p>Jayant Mehta © 2020</p>\r\n      </div>\r\n    </>\r\n);\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nimport Intro from './Intro'\r\nimport About from './About'\r\nimport Experience from './Experience/Experience';\r\nimport ExperienceContent from './Experience/ExperienceContent';\r\nimport Projects from './Projects/Projects';\r\nimport ProjectsContent from './Projects/ProjectsContent';\r\nimport Contact from './Contact';\r\n\r\nconst HomePage = () => (\r\n    <>\r\n    <Intro />\r\n    <div id=\"page-body\">\r\n        <About />\r\n        <Experience experienceProfiles={ExperienceContent}/>\r\n        <Projects projectProfiles={ProjectsContent}/>\r\n    </div>\r\n        <Contact />\r\n    </>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Link } from 'react-scroll';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  font-family: 'Open Sans', sans-serif;\r\n  font-weight: bold;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  a {\r\n    color: white;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n  }\r\n  a:hover {\r\n    color: rgb(58, 170, 204);\r\n  } \r\n\r\n  @media (max-width: 768px) {\r\n    flex-flow: column nowrap;\r\n    background-color: #0D2538;\r\n    position: fixed;\r\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\r\n    top: 0;\r\n    right: 0;\r\n    height: 100vh;\r\n    width: 300px;\r\n    padding-top: 3.5rem;\r\n    transition: transform 0.3s ease-in-out;\r\n    li {\r\n      color: #fff;\r\n      padding: 18px 10px;\r\n\r\n    }\r\n    a {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RightNav = ({ open }) => {\r\n  return (\r\n    <Ul open={open}>\r\n    <li>\r\n        <Link\r\n            activeClass=\"active\"\r\n            to=\"about\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}>\r\n        About Me\r\n        </Link>\r\n    </li>\r\n    <li>\r\n        <Link\r\n            activeClass=\"active\"\r\n            to=\"experience\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}>\r\n        Experience\r\n        </Link>\r\n    </li>\r\n    <li>\r\n        <Link\r\n            activeClass=\"active\"\r\n            to=\"projects\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}>\r\n        Projects\r\n        </Link>\r\n    </li>\r\n    <li>\r\n        <Link\r\n            activeClass=\"active\"\r\n            to=\"contact\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}>\r\n        Contact\r\n        </Link>\r\n    </li>\r\n    <li>\r\n        <a href={process.env.PUBLIC_URL + '/static/JayantMehtaResume.pdf'}  target=\"_blank\">Resume</a>\r\n    </li>\r\n    </Ul>\r\n  )\r\n}\r\n\r\nexport default RightNav","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport RightNav from './RightNav';\r\n\r\nconst StyledBurger = styled.div`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: fixed;\r\n  top: 15px;\r\n  right: 20px;\r\n  z-index: 20;\r\n  display: none;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n  }\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background-color: ${({ open }) => open ? '#ccc' : 'white'};\r\n    border-radius: 10px;\r\n    transform-origin: 1px;\r\n    transition: all 0.3s linear;\r\n    &:nth-child(1) {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n    &:nth-child(2) {\r\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\r\n      opacity: ${({ open }) => open ? 0 : 1};\r\n    }\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Burger = () => {\r\n  const [open, setOpen] = useState(false)\r\n  \r\n  return (\r\n    <>\r\n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </StyledBurger>\r\n      <RightNav open={open}/>\r\n    </>\r\n  )\r\n}\r\nexport default Burger","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Burger from './Burger';\r\n\r\nimport { Link } from 'react-scroll';\r\n\r\n\r\nconst Nav = styled.nav`\r\n  font-family: 'Open Sans', sans-serif;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  border-bottom: 4px solid black;\r\n  padding: 0 20px;\r\n  display: flex;\r\n  background-color: black;\r\n  font-weight: bold;\r\n\r\n  \r\n  .logo {\r\n    padding: 15px 0;\r\n    color: white;\r\n  }\r\n  .options {\r\n    justify-content: center;\r\n  }\r\n\r\n  a {\r\n    color: white;\r\n    cursor:pointer;\r\n    padding: 12px;\r\n    text-decoration: none;\r\n  }\r\n  a:hover {\r\n    color: rgb(58, 170, 204);\r\n  } \r\n\r\n`\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Nav>\r\n      <Link\r\n          activeClass=\"active\"\r\n          to=\"intro\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}>\r\n      Jayant Mehta\r\n      </Link>\r\n      <div className=\"options\">\r\n        <Burger />\r\n      </div>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React, {Component } from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { faCoffee, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\n\r\nimport HomePage from './components/HomePage';\r\nimport NavBar from './components/Nav/Nav';\r\n\r\nlibrary.add(fab, faCoffee, faEnvelope );\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <NavBar />\r\n          <div>\r\n            <Switch>\r\n              <Route path=\"/\" component={HomePage} exact/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}